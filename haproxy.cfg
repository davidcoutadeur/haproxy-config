global                                                                                                                                                                                                                                       
        daemon # starts as a daemon
        maxconn 4096 # maximum per-process number of concurrent connections (ulimit -n is adapted in consequence at startup)
        chroot /var/lib/haproxy # chroot for better security
        user haproxy # switch to user haproxy after startup
        group haproxy # switch to group haproxy after startup
        log 127.0.0.1 local5 # by default log to local5 facility on localhost
        stats socket /var/lib/haproxy/stats # give some stats on this socket
        ssl-server-verify none # for disabling server certificate verification on ssl connections


defaults
        mode tcp # enabling mode tcp for a LDAP server (no http)
        balance roundrobin # balancer algorithm among : roundrobin, static-rr, leastconn, source, uri, url_param, hdr, rdp-cookie
        timeout connect 5000 # maximum time to wait for a connection attempt to a server to succeed (ms)
        timeout client 5000 # timeout tolarated for a client answer (should be eq. to timeout server) (ms)
        timeout server 5000 # timeout tolarated for a server answer (should be eq. to timeout client) (ms)
        log global # use log parameters from global
        option tcplog # advanced logging of TCP connections with session state and timers
        option redispatch # Enable or disable session redistribution in case of connection failure
        #option ldap-check # use ldap check
        option ssl-hello-chk # Use SSLv3 client hello health checks for server testing
        #option dontlognull # production : disable logs from health monitoring systems
        retries 3 # Set the number of retries to perform on a server after a connection failure

# ALGORITHMS
# roundrobin: Each server is used in turns, according to their weights.
# static-rr: same as roundrobin, but changing a server's weight on the fly will have no effect
# leastconn: server with the lowest number of connections receives the connection (rr when the same charge)
# source: The source IP address is hashed and divided by the total weight of the running servers to designate which server will receive the request
# uri: hashes the left part of the URI (before the question mark) or the whole URI and divides the hash value by the total weight of the running servers
# url_param:_the value of given parameter is hashed and divided by the total weight of the running servers. (the parameter can be in a HTTP_POST or HTTP_GET request)
# hdr: the given case insensitive header value is hashed (round robin if absent)
# rdp-cookie: inspect the RDP connection for a cookie, and hashes its value

listen openldap
     bind *:636
     stick-table type ip size 1
     stick on dst
     server ldap1 1.2.3.4:636 maxconn 2048 check inter 5000
     server ldap2 1.2.3.5:636 maxconn 2048 check inter 5000 backup

# check: By default, a server is always considered available. If "check" is set, the server will receive periodic health checks to ensure that it is really able to serve requests.
# backup: The server is only used in loadbalancing when all other non-backup servers are unavailable.
# maxconn: maximal number of concurrent connections that will be sent to this server. If the number of incoming concurrent requests goes higher than this value, they will be queued, waiting for a connection to be released.
# inter: interval for health check (ms)
# stick-table: store a table of each client IP address
# stick on: bind the client to the destination (this is done to ensure clients don't toggle between servers ~ nopreempt for keepalived)

# Alternative configuration : send a bind request in binary
#listen openldap
#     bind *:636
#     stick-table type ip size 1
#     stick on dst
#     option tcp-check
#     tcp-check connect port 637 ssl
#     tcp-check send-binary 3035020101603002010304237569643d746573742c6f753d70656f706c652c64633d646f6d61696e2c64633d636f6d8006736563726574
#     tcp-check expect binary 300c02010161070a010004000400
#     server ldap1 1.2.3.4:636 maxconn 2048 check inter 5000
#     server ldap2 1.2.3.5:636 maxconn 2048 check inter 5000 backup
# tcp-check connect: specify to establish ssl connection on given port before checking the service
# tcp-check send-binary: sends a bind request with user uid=test,ou=people,dc=domain,dc=com and password secret
# tcp-check expect binary: expect a successful bind response

listen stats
    bind *:8000
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy?stats
    stats auth admin:secret
